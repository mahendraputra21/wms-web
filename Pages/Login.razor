@layout LoginLayout
@page "/"
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider


<div class="back">
    <div class="div-center">
        <div class="content">
            <h3>SIGN IN</h3>
            <hr />
            <EditForm Model="@loginModel" OnValidSubmit="@HandleValidSubmit">
                <div class="form-group">
                    <label for="email">Email Address:</label>
                    <InputText id="email" class="form-control" @bind-Value="@loginModel.Email" />
                    <ValidationMessage For="@(() => loginModel.Email)" />
                </div>
                <div class="form-group">
                    <label for="password">Password:</label>
                    <InputText id="password" type="password" class="form-control" @bind-Value="@loginModel.Password" />
                    <ValidationMessage For="@(() => loginModel.Password)" />
                </div>
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    @errorMessage
                }
                <br/>

                <button type="submit" class="btn btn-primary right">Login</button>

                <hr />
                <button type="button" class="btn btn-link">Signup</button>
                <button type="button" class="btn btn-link">Reset Password</button>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();

    private string errorMessage = "";

    private async Task HandleValidSubmit()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (loginModel.Email == "admin@blazor.com" && loginModel.Password == "rahasia")
        {
            NavigationManager.NavigateTo("index");
        }
        else
        {
            errorMessage = "Invalid email or password.";
        }
    }

    private class LoginModel
    {
        [Required(ErrorMessage = "Email is required.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; }
    }
}
